# Generated by Django 4.2.7 on 2024-10-29 06:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('decidables', '0002_decidable_has_winners_decidable_num_winners_and_more'),
        ('group', '0040_topic_topic_group_unique_topics'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('private', 'Private'), ('group', 'Group'), ('decidable', 'Decidable'), ('option', 'Option')], max_length=64)),
                ('decidable', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_channel', to='decidables.decidable')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_channels', to='group.group')),
                ('option', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_channel', to='decidables.option')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, default='', max_length=2000)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_messages', to='feed.channel')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='feed.message', verbose_name='parent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_channel_participants', to='feed.channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_channel_participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='channel',
            name='participants',
            field=models.ManyToManyField(related_name='feed_channels', through='feed.ChannelParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='channel',
            name='topic',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feed_channel', to='group.topic'),
        ),
        migrations.AddConstraint(
            model_name='channelparticipant',
            constraint=models.UniqueConstraint(fields=('user', 'channel'), name='user_joins_chat_once'),
        ),
        migrations.AddConstraint(
            model_name='channel',
            constraint=models.UniqueConstraint(condition=models.Q(('group__isnull', False), ('topic__isnull', True)), fields=('group',), name='one_chat_per_group'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='channel',
            trigger=pgtrigger.compiler.Trigger(name='no_topic_without_group', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (NEW."group_id" IS NULL AND NEW."topic_id" IS NOT NULL)', func="RAISE EXCEPTION 'pgtrigger: Cannot insert or update rows from % table', TG_TABLE_NAME;", hash='2aa41a8770f0b0c5043ab1ebdc54e309cc88fecb', operation='INSERT OR UPDATE', pgid='pgtrigger_no_topic_without_group_c0548', table='feed_channel', when='BEFORE')),
        ),
    ]
