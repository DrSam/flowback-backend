# Generated by Django 4.2.7 on 2024-11-27 11:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0003_initial'),
        ('group', '0001_initial'),
        ('files', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schedule', '0001_initial'),
        ('kanban', '0001_initial'),
        ('comment', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='groupuserinvite',
            name='initiator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupuserinvite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupuserdelegator',
            name='delegate_pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groupuserdelegatepool'),
        ),
        migrations.AddField(
            model_name='groupuserdelegator',
            name='delegator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_user_delegate_delegator', to='group.groupuser'),
        ),
        migrations.AddField(
            model_name='groupuserdelegator',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='groupuserdelegator',
            name='tags',
            field=models.ManyToManyField(to='group.grouptags'),
        ),
        migrations.AddField(
            model_name='groupuserdelegatepool',
            name='comment_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comment.commentsection'),
        ),
        migrations.AddField(
            model_name='groupuserdelegatepool',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='groupuserdelegate',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='groupuserdelegate',
            name='group_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groupuser'),
        ),
        migrations.AddField(
            model_name='groupuserdelegate',
            name='pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groupuserdelegatepool'),
        ),
        migrations.AddField(
            model_name='groupuser',
            name='chat_participant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chat.messagechannelparticipant'),
        ),
        migrations.AddField(
            model_name='groupuser',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='groupuser',
            name='permission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='group.grouppermissions'),
        ),
        migrations.AddField(
            model_name='groupuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupthread',
            name='attachments',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='files.filecollection'),
        ),
        migrations.AddField(
            model_name='groupthread',
            name='comment_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='comment.commentsection'),
        ),
        migrations.AddField(
            model_name='groupthread',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.groupuser'),
        ),
        migrations.AddField(
            model_name='grouptags',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='grouppermissions',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group'),
        ),
        migrations.AddField(
            model_name='group',
            name='chat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chat.messagechannel'),
        ),
        migrations.AddField(
            model_name='group',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='default_permission',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='group.grouppermissions'),
        ),
        migrations.AddField(
            model_name='group',
            name='group_folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='group.groupfolder'),
        ),
        migrations.AddField(
            model_name='group',
            name='kanban',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='kanban.kanban'),
        ),
        migrations.AddField(
            model_name='group',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='schedule.schedule'),
        ),
        migrations.AddConstraint(
            model_name='topic',
            constraint=models.UniqueConstraint(fields=('group', 'name'), name='group_unique_topics'),
        ),
        migrations.AlterUniqueTogether(
            name='groupuserdelegator',
            unique_together={('delegator', 'delegate_pool', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='groupuserdelegate',
            unique_together={('group_user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='groupuser',
            unique_together={('user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='grouptags',
            unique_together={('name', 'group')},
        ),
        migrations.AddConstraint(
            model_name='group',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('public', False), ('direct_join', True)), _negated=True), name='group_not_public_and_direct_join_check'),
        ),
    ]
